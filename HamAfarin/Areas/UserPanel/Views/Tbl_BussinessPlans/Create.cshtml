@model ViewModels.UserCreateBusinessPlan
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "افزودن " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
}

<h2>افزودن @Html.DisplayNameFor(model => model)</h2>

@using (Html.BeginForm("Create", "Tbl_BussinessPlans", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ImageNameInListPalns, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgInListPalns")
                @Html.ValidationMessageFor(model => model.ImageNameInListPalns)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageNameInSinglePlan, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgInSinglePlan")
                @Html.ValidationMessageFor(model => model.ImageNameInSinglePlan)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessLogoImageName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgLogo")
                @Html.ValidationMessageFor(model => model.BussinessLogoImageName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessName)
                @Html.ValidationMessageFor(model => model.BussinessName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessSummaryDescription, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BussinessSummaryDescription)
                @Html.ValidationMessageFor(model => model.BussinessSummaryDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName)
                @Html.ValidationMessageFor(model => model.CompanyName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyType_id, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyType_id", String.Empty)
                @Html.ValidationMessageFor(model => model.CompanyType_id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyRegisterCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyRegisterCode)
                @Html.ValidationMessageFor(model => model.CompanyRegisterCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyRegisterDate, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyRegisterDate)
                @Html.ValidationMessageFor(model => model.CompanyRegisterDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyNationalCertificateCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyNationalCertificateCode)
                @Html.ValidationMessageFor(model => model.CompanyNationalCertificateCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyEconomicCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyEconomicCode)
                @Html.ValidationMessageFor(model => model.CompanyEconomicCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentFullName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentFullName)
                @Html.ValidationMessageFor(model => model.CompanyAgentFullName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentRole, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentRole)
                @Html.ValidationMessageFor(model => model.CompanyAgentRole)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentPhoneNumber, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentPhoneNumber)
                @Html.ValidationMessageFor(model => model.CompanyAgentPhoneNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentEmail, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentEmail)
                @Html.ValidationMessageFor(model => model.CompanyAgentEmail)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentNationalCardImageName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgNationalCard")
                @Html.ValidationMessageFor(model => model.CompanyAgentNationalCardImageName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyIntroductionLetterFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("letterFile")
                @Html.ValidationMessageFor(model => model.CompanyIntroductionLetterFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyRegisterAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyRegisterAddress)
                @Html.ValidationMessageFor(model => model.CompanyRegisterAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyPostalCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyPostalCode)
                @Html.ValidationMessageFor(model => model.CompanyPostalCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyCity, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyCity)
                @Html.ValidationMessageFor(model => model.CompanyCity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialDuration_id, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.DropDownList("FinancialDuration_id", String.Empty)
                @Html.ValidationMessageFor(model => model.FinancialDuration_id)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDifferentActiveAddressWithRegisterAddress)
                @Html.LabelFor(model => model.IsDifferentActiveAddressWithRegisterAddress)
                @Html.ValidationMessageFor(model => model.IsDifferentActiveAddressWithRegisterAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyActiveAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyActiveAddress)
                @Html.ValidationMessageFor(model => model.CompanyActiveAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyActivePostalCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyActivePostalCode)
                @Html.ValidationMessageFor(model => model.CompanyActivePostalCode)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDaneshBonyan)
                @Html.LabelFor(model => model.IsDaneshBonyan)
                @Html.ValidationMessageFor(model => model.IsDaneshBonyan)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessWebSiteAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessWebSiteAddress)
                @Html.ValidationMessageFor(model => model.BussinessWebSiteAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessInstagramAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessInstagramAddress)
                @Html.ValidationMessageFor(model => model.BussinessInstagramAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessAparatAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessAparatAddress)
                @Html.ValidationMessageFor(model => model.BussinessAparatAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPlanRisksUser, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BusinessPlanRisksUser)
                @Html.ValidationMessageFor(model => model.BusinessPlanRisksUser)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessModelFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("modelFile")
                @Html.ValidationMessageFor(model => model.BussinessModelFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IntroductionIdeaVideoFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("ideaFile")
                @Html.ValidationMessageFor(model => model.IntroductionIdeaVideoFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Coasts, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Coasts)
                @Html.ValidationMessageFor(model => model.Coasts)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompetitiveAdvantagesAndDisadvantages, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CompetitiveAdvantagesAndDisadvantages)
                @Html.ValidationMessageFor(model => model.CompetitiveAdvantagesAndDisadvantages)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SlideShowPresentationFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("slideFile")
                @Html.ValidationMessageFor(model => model.SlideShowPresentationFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentsAndReportsFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("reportFile")
                @Html.ValidationMessageFor(model => model.DocumentsAndReportsFileName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HaveYouRaisedCapitalPrevious)
                @Html.LabelFor(model => model.HaveYouRaisedCapitalPrevious)
                @Html.ValidationMessageFor(model => model.HaveYouRaisedCapitalPrevious)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InvestmentAmountPrevious, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvestmentAmountPrevious)
                @Html.ValidationMessageFor(model => model.InvestmentAmountPrevious)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentageOfSharesCapitalPrevious, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentageOfSharesCapitalPrevious)
                @Html.ValidationMessageFor(model => model.PercentageOfSharesCapitalPrevious)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousInvestorFullName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousInvestorFullName)
                @Html.ValidationMessageFor(model => model.PreviousInvestorFullName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousInvestorType, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousInvestorType)
                @Html.ValidationMessageFor(model => model.PreviousInvestorType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousInvestorDate, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousInvestorDate)
                @Html.ValidationMessageFor(model => model.PreviousInvestorDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousInvestorExpireDate, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousInvestorExpireDate)
                @Html.ValidationMessageFor(model => model.PreviousInvestorExpireDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentageReturnInvestment, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentageReturnInvestment)
                @Html.ValidationMessageFor(model => model.PercentageReturnInvestment)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ایجاد" class="btn btn-primary" />
                @Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
    </div>
}

@section Scripts{


    <script>

        $("#InvestmentStartDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#InvestmentStartDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

        //$("#PreviousInvestorDate").kendoDatePicker();
        //$("#CompanyRegisterDate").kendoDatePicker();
        //$("#PreviousInvestorExpireDate").kendoDatePicker();
        //$("#InvestmentStartDate").kendoDatePicker();
        //$("#InvestmentExpireDate").kendoDatePicker();

    </script>

    <--> ck editor</-->
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/ckeditor/adapters/jquery.js"></script>

    <script>
        $(function () {
            $('#BusinessPlanFeatures').ckeditor();
            $('#MarketTarget').ckeditor();
            $('#BusinessPlanRisks').ckeditor();
        });
    </script>
}