@model ViewModels.AdminCreateEditBusinessPlan
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "افزودن " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
}

<h2>افزودن @Html.DisplayNameFor(model => model)</h2>

@using (Html.BeginForm("Create", "Tbl_BussinessPlans", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)


        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsActive, new { @checked = true })
                @Html.LabelFor(model => model.IsActive)

                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageNameInListPalns, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgInListPalns")
                @Html.ValidationMessageFor(model => model.ImageNameInListPalns)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageNameInSinglePlan, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgInSinglePlan")
                @Html.ValidationMessageFor(model => model.ImageNameInSinglePlan)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Title">گالری تصاویر</label>
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("GalleryPlan").Multiple(true)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDescription, new { @cols = 80, @rows = 7 })
                @Html.ValidationMessageFor(model => model.ShortDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessLogoImageName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgLogo")
                @Html.ValidationMessageFor(model => model.BussinessLogoImageName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessName)
                @Html.ValidationMessageFor(model => model.BussinessName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessSummaryDescription, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BussinessSummaryDescription, new { @cols = 80, @rows = 7 })
                @Html.ValidationMessageFor(model => model.BussinessSummaryDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessField_id, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.DropDownList("BussinessField_id", String.Empty)
                @Html.ValidationMessageFor(model => model.BussinessField_id)
            </div>
        </div>

        <div class="container">
            @Html.LabelFor(model => model.InvestmentStartDate, new { @class = "control-label col-md-4" })
            <div class="row">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text cursor-pointer btn btn-success" id="InvestmentStartDateYMD">انتخاب تاریخ شروع</span>
                            <label id="showDate_class" class="m-3">
                                @*@Html.DisplayFor(model => model.dtBrithDateYMD)*@
                            </label>
                        </div>
                    </div>

                    <input type="text" id="strInvestmentStartDate" name="strInvestmentStartDate">

                    @Html.ValidationMessageFor(model => model.strInvestmentStartDate, null, new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="container">
            @Html.LabelFor(model => model.InvestmentExpireDate, new { @class = "control-label col-12" })
            <div class="row">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text cursor-pointer btn btn-success" id="InvestmentExpireDateYMD">انتخاب تاریخ پایان</span>
                            <label id="showDate_class" class="m-3">
                                @*@Html.DisplayFor(model => model.dtBrithDateYMD)*@
                            </label>
                        </div>
                    </div>

                    <input type="text" id="strInvestmentExpireDate" name="strInvestmentExpireDate">

                    @Html.ValidationMessageFor(model => model.strInvestmentExpireDate, null, new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName)
                @Html.ValidationMessageFor(model => model.CompanyName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyType_id, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyType_id", String.Empty)
                @Html.ValidationMessageFor(model => model.CompanyType_id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageNameWarranty, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgWarranty")
                @Html.ValidationMessageFor(model => model.ImageNameWarranty)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyRegisterCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyRegisterCode)
                @Html.ValidationMessageFor(model => model.CompanyRegisterCode)
            </div>
        </div>

        <div class="container">
            @Html.LabelFor(model => model.CompanyRegisterDate, new { @class = "control-label col-12" })
            <div class="row">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text cursor-pointer btn btn-success" id="CompanyRegisterDateYMD">انتخاب تاریخ</span>
                            <label id="showDate_class" class="m-3">
                                @*@Html.DisplayFor(model => model.dtBrithDateYMD)*@
                            </label>
                        </div>
                    </div>

                    <input type="text" id="strCompanyRegisterDate" name="strCompanyRegisterDate">

                    @Html.ValidationMessageFor(model => model.strCompanyRegisterDate, null, new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyNationalCertificateCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyNationalCertificateCode)
                @Html.ValidationMessageFor(model => model.CompanyNationalCertificateCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyEconomicCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyEconomicCode)
                @Html.ValidationMessageFor(model => model.CompanyEconomicCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentFullName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentFullName)
                @Html.ValidationMessageFor(model => model.CompanyAgentFullName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentRole, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentRole)
                @Html.ValidationMessageFor(model => model.CompanyAgentRole)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentPhoneNumber, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentPhoneNumber)
                @Html.ValidationMessageFor(model => model.CompanyAgentPhoneNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentEmail, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyAgentEmail)
                @Html.ValidationMessageFor(model => model.CompanyAgentEmail)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyAgentNationalCardImageName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("imgNationalCard")
                @Html.ValidationMessageFor(model => model.CompanyAgentNationalCardImageName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyIntroductionLetterFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("letterFile")
                @Html.ValidationMessageFor(model => model.CompanyIntroductionLetterFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyRegisterAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyRegisterAddress)
                @Html.ValidationMessageFor(model => model.CompanyRegisterAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyPostalCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyPostalCode)
                @Html.ValidationMessageFor(model => model.CompanyPostalCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyCity, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyCity)
                @Html.ValidationMessageFor(model => model.CompanyCity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialDuration_id, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.DropDownList("FinancialDuration_id", String.Empty)
                @Html.ValidationMessageFor(model => model.FinancialDuration_id)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDifferentActiveAddressWithRegisterAddress)
                @Html.LabelFor(model => model.IsDifferentActiveAddressWithRegisterAddress)
                @Html.ValidationMessageFor(model => model.IsDifferentActiveAddressWithRegisterAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyActiveAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyActiveAddress)
                @Html.ValidationMessageFor(model => model.CompanyActiveAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyActivePostalCode, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyActivePostalCode)
                @Html.ValidationMessageFor(model => model.CompanyActivePostalCode)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDaneshBonyan)
                @Html.LabelFor(model => model.IsDaneshBonyan)
                @Html.ValidationMessageFor(model => model.IsDaneshBonyan)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessWebSiteAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessWebSiteAddress)
                @Html.ValidationMessageFor(model => model.BussinessWebSiteAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessInstagramAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessInstagramAddress)
                @Html.ValidationMessageFor(model => model.BussinessInstagramAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessAparatAddress, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessAparatAddress)
                @Html.ValidationMessageFor(model => model.BussinessAparatAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPlanRisksUser, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BusinessPlanRisksUser)
                @Html.ValidationMessageFor(model => model.BusinessPlanRisksUser)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPlanRisks, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BusinessPlanRisks)
                @Html.ValidationMessageFor(model => model.BusinessPlanRisks)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessModelFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("modelFile")
                @Html.ValidationMessageFor(model => model.BussinessModelFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IntroductionIdeaVideoFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("ideaFile")
                @Html.ValidationMessageFor(model => model.IntroductionIdeaVideoFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarketTarget, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.MarketTarget)
                @Html.ValidationMessageFor(model => model.MarketTarget)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Coasts, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Coasts)
                @Html.ValidationMessageFor(model => model.Coasts)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompetitiveAdvantagesAndDisadvantages, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CompetitiveAdvantagesAndDisadvantages)
                @Html.ValidationMessageFor(model => model.CompetitiveAdvantagesAndDisadvantages)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SlideShowPresentationFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("slideFile")
                @Html.ValidationMessageFor(model => model.SlideShowPresentationFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentsAndReportsFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("reportFile")
                @Html.ValidationMessageFor(model => model.DocumentsAndReportsFileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonetaryUnit_id, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.DropDownList("MonetaryUnit_id", String.Empty)
                @Html.ValidationMessageFor(model => model.MonetaryUnit_id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountRequiredRoRaiseCapital, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountRequiredRoRaiseCapital)
                @Html.ValidationMessageFor(model => model.AmountRequiredRoRaiseCapital)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaximumInvestmentPercentage, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaximumInvestmentPercentage)
                @Html.ValidationMessageFor(model => model.MaximumInvestmentPercentage)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimumAmountInvest, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinimumAmountInvest)
                @Html.ValidationMessageFor(model => model.MinimumAmountInvest)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsOverflowInvestment)
                @Html.LabelFor(model => model.IsOverflowInvestment)
                @Html.ValidationMessageFor(model => model.IsOverflowInvestment)
            </div>
        </div>

        <div class="form-group">
            <div class="col-12">
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HaveYouRaisedCapitalPrevious)
                @Html.LabelFor(model => model.HaveYouRaisedCapitalPrevious)
                @Html.ValidationMessageFor(model => model.HaveYouRaisedCapitalPrevious)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InvestmentAmountPrevious, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvestmentAmountPrevious)
                @Html.ValidationMessageFor(model => model.InvestmentAmountPrevious)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentageOfSharesCapitalPrevious, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentageOfSharesCapitalPrevious)
                @Html.ValidationMessageFor(model => model.PercentageOfSharesCapitalPrevious)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousInvestorFullName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousInvestorFullName)
                @Html.ValidationMessageFor(model => model.PreviousInvestorFullName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousInvestorType, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousInvestorType)
                @Html.ValidationMessageFor(model => model.PreviousInvestorType)
            </div>
        </div>

        <div class="container">
            @Html.LabelFor(model => model.PreviousInvestorDate, new { @class = "control-label col-12" })
            <div class="row">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text cursor-pointer btn btn-success" id="PreviousInvestorDateYMD">انتخاب تاریخ</span>
                            <label id="showDate_class" class="m-3">
                                @*@Html.DisplayFor(model => model.dtBrithDateYMD)*@
                            </label>
                        </div>
                    </div>

                    <input type="text" id="strPreviousInvestorDate" name="strPreviousInvestorDate">

                    @Html.ValidationMessageFor(model => model.strPreviousInvestorDate, null, new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="container">
            @Html.LabelFor(model => model.PreviousInvestorExpireDate, new { @class = "control-label col-12" })
            <div class="row">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text cursor-pointer btn btn-success" id="PreviousInvestorExpireDateYMD">انتخاب تاریخ</span>
                            <label id="showDate_class" class="m-3">
                                @*@Html.DisplayFor(model => model.dtBrithDateYMD)*@
                            </label>
                        </div>
                    </div>

                    <input type="text" id="strPreviousInvestorExpireDate" name="strPreviousInvestorExpireDate">

                    @Html.ValidationMessageFor(model => model.strPreviousInvestorExpireDate, null, new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentageReturnInvestment, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentageReturnInvestment)
                @Html.ValidationMessageFor(model => model.PercentageReturnInvestment)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPlanFeatures, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessPlanFeatures)
                @Html.ValidationMessageFor(model => model.BusinessPlanFeatures)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodeOTC, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodeOTC)
                @Html.ValidationMessageFor(model => model.CodeOTC)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FaraboorsProjectId, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FaraboorsProjectId)
                @Html.ValidationMessageFor(model => model.FaraboorsProjectId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialInformationText, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinancialInformationText)
                @Html.ValidationMessageFor(model => model.FinancialInformationText)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgressReportText, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgressReportText)
                @Html.ValidationMessageFor(model => model.ProgressReportText)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InvestorsText, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvestorsText)
                @Html.ValidationMessageFor(model => model.InvestorsText)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractFileName, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("contractFile")
                @Html.ValidationMessageFor(model => model.ContractFileName)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaTitle)
                @Html.ValidationMessageFor(model => model.MetaTitle)
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescription, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaDescription)
                @Html.ValidationMessageFor(model => model.MetaDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageAlt, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageAlt)
                @Html.ValidationMessageFor(model => model.ImageAlt)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Canonical, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Canonical)
                @Html.ValidationMessageFor(model => model.Canonical)
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.TitleUrl, new { @class = "control-label col-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TitleUrl)
                    @Html.ValidationMessageFor(model => model.TitleUrl)
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.SeoKey, new { @class = "control-label col-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SeoKey)
                @Html.ValidationMessageFor(model => model.SeoKey)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ایجاد" class="btn btn-primary" />
                @Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
    </div>
}

@section Scripts{


    <script>

        $("#InvestmentStartDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#strInvestmentStartDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

        $("#InvestmentExpireDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#strInvestmentExpireDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

        $("#CompanyRegisterDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#strCompanyRegisterDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

        $("#PreviousInvestorDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#strPreviousInvestorDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

        $("#PreviousInvestorExpireDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#strPreviousInvestorExpireDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

    </script>

    <--> ck editor</-->
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#BusinessPlanFeatures').ckeditor();
            $('#MarketTarget').ckeditor();
            $('#BusinessPlanRisks').ckeditor();
            $('#FinancialInformationText').ckeditor();
            $('#ProgressReportText').ckeditor();
            $('#InvestorsText').ckeditor();
        });
    </script>
}