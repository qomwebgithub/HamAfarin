@model DataLayer.Tbl_UserProfiles

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ProfileID)
        @Html.HiddenFor(model => model.IsDeleted)
        @Html.HiddenFor(model => model.CreateDate)
        @Html.HiddenFor(model => model.User_id)
        @Html.HiddenFor(model => model.ImageName)
        @Html.HiddenFor(model => model.BirthDate)

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber)
                @Html.ValidationMessageFor(model => model.MobileNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bio)
                @Html.ValidationMessageFor(model => model.Bio)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NationalCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NationalCode)
                @Html.ValidationMessageFor(model => model.NationalCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatherName)
                @Html.ValidationMessageFor(model => model.FatherName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileNationalId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfileNationalId)
                @Html.ValidationMessageFor(model => model.ProfileNationalId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SejamCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SejamCode)
                @Html.ValidationMessageFor(model => model.SejamCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountNumber)
                @Html.ValidationMessageFor(model => model.AccountNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountSheba, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountSheba)
                @Html.ValidationMessageFor(model => model.AccountSheba)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="container">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-4" })
            <div class="row">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text cursor-pointer btn btn-success" id="BirthDateYMD">انتخاب تاریخ تولد</span>
                            <label id="showDate_class" class="m-3">
                                @string.Format("{0: yyyy/MM/dd}", Model.BirthDate)
                            </label>
                        </div>
                    </div>

                    <input type="text" id="strBirthDate" name="strBirthDate">

                    @Html.ValidationMessageFor(model => model.strBirthDate, null, new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender)
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlaceOfIssue, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlaceOfIssue)
                @Html.ValidationMessageFor(model => model.PlaceOfIssue)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlaceOfBirth, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlaceOfBirth)
                @Html.ValidationMessageFor(model => model.PlaceOfBirth)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SignitureFile, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SignitureFile)
                @Html.ValidationMessageFor(model => model.SignitureFile)
            </div>
        </div>

        @if (string.IsNullOrEmpty(Model.strSejamResponse) == false)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.strSejamResponse, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.strSejamResponse)
                    @Html.ValidationMessageFor(model => model.strSejamResponse)
                </div>
            </div>
        }

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-primary" />
                @Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
    </div>
}

@section Scripts{
    <script src="~/Areas/UserPanel/Content/js/bootstrap.min.js"></script>

    <script src="~/Scripts/jquery.md.bootstrap.datetimepicker.js"></script>

    <script>

        $("#BirthDateYMD").MdPersianDateTimePicker({
            targetTextSelector: "#strBirthDate",
            textFormat: "yyyy-MM-dd",
            isGregorian: false,
            modalMode: false,
            englishNumber: false,
        });

    </script>
}